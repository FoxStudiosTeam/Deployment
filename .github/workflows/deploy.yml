name: Deploy to Kubernetes

on:
  workflow_call:
    inputs:
      image-name:
        type: string
        required: true
      version:
        type: string
        required: true
      namespace:
        type: string
        default: 'default'
      k8s-manifest:
        type: string
        required: true
    secrets:
      DOCKER_HOST:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      KUBECONFIG:
        required: true

jobs:
  deploy-to-k8s:
    runs-on: ubuntu-22.04
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes tools
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure Kubernetes access
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config_temp
          if kubectl --kubeconfig ~/.kube/config_temp cluster-info &>/dev/null; then
            echo "KUBECONFIG is valid YAML"
            mv ~/.kube/config_temp ~/.kube/config
          else
            echo "Trying base64 decode..."
            echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
          fi
          chmod 600 ~/.kube/config
          kubectl cluster-info
          kubectl get nodes

      - name: Debug - Check current secrets in namespace
        run: |
          kubectl get secrets -n ${{ inputs.namespace }}

      - name: Create or update registry secret in Kubernetes
        run: |
          kubectl delete secret registry-secret --namespace=${{ inputs.namespace }} --ignore-not-found
          kubectl create secret docker-registry registry-secret \
            --docker-server=${{ secrets.DOCKER_HOST }} \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password="${{ secrets.DOCKER_PASSWORD }}" \
            --docker-email="github-actions@example.com" \
            --namespace=${{ inputs.namespace }}

      - name: Verify registry secret
        run: |
          kubectl describe secret registry-secret --namespace=${{ inputs.namespace }}

      - name: Update image version in deployment
        run: |
          FULL_IMAGE_TAG="${{ secrets.DOCKER_HOST }}/${{ inputs.image-name }}:latest"
          echo "Updating image to: $FULL_IMAGE_TAG"
          if [ -f "${{ inputs.k8s-manifest }}" ]; then
            cp "${{ inputs.k8s-manifest }}" "${{ inputs.k8s-manifest }}.backup"
            sed -i "s|image:.*|image: $FULL_IMAGE_TAG|g" "${{ inputs.k8s-manifest }}"
            echo "Updated manifest content:"
            cat "${{ inputs.k8s-manifest }}"
          else
            echo "Kubernetes manifest file not found: ${{ inputs.k8s-manifest }}"
            exit 1
          fi

      - name: Deploy to Kubernetes
        run: |
          echo "Applying manifest:"
          cat "${{ inputs.k8s-manifest }}"
          kubectl apply -f "${{ inputs.k8s-manifest }}" --namespace=${{ inputs.namespace }}

      - name: Wait for rollout
        run: |
          sleep 10
          kubectl rollout status deployment/frontend-app-deployment --namespace=${{ inputs.namespace }} --timeout=180s

      - name: Debug - Check pod events and status
        run: |
          echo "=== Pods status ==="
          kubectl get pods --namespace=${{ inputs.namespace }} -l app=frontend-app
          echo "=== Pods details ==="
          kubectl describe pods --namespace=${{ inputs.namespace }} -l app=frontend-app

      - name: Verify deployment
        run: |
          kubectl get deployments --namespace=${{ inputs.namespace }}